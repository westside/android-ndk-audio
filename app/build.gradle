apply plugin: 'com.android.model.application'

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            applicationId="com.bhaptics.dev.ndk"
            minSdkVersion.apiLevel = 17
            targetSdkVersion.apiLevel = 22
            versionCode = 1
            versionName = "1.0"
        }
    }

    android.ndk {
        moduleName = "opensl_example"
        cppFlags.add("-std=c++11")
        ldLibs.addAll(['android', 'log', 'OpenSLES'])
        stl     = "gnustl_static"
    }
    android.buildTypes {
        release {
            minifyEnabled=false
            proguardFiles.add(file('proguard-android.txt'))
        }
    }
    android.productFlavors {
        create('all')
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
}


// Location of where to store the jni wrapped files
def coreWrapperDir = new File("${projectDir}/src/main/java/com/bhaptics/ndk")

task createCoreWrapperDir {
    coreWrapperDir.mkdirs()
}

// For this to work, it's assumed SWIG is installed
// TODO: This only works when called from Command Line (gradlew runSwig)
task runSwig(type:Exec, dependsOn: ['createCoreWrapperDir']) {

    String osName = System.getProperty("os.name").toLowerCase();
    if (osName.contains("windows")) {
        workingDir '/src/main/jni'   // This implicitly starts from $(projectDir) evidently
        commandLine 'cmd', '/c', 'swig'
        args '-c++', '-java', '-package', 'com.bhaptics.ndk', '-outdir', coreWrapperDir.absolutePath, 'opensl_example_interface.i'
    }
    else {
        commandLine 'swig'
        args '-c++', '-java', '-package', 'com.bhaptics.ndk', '-outdir', coreWrapperDir.absolutePath, "${projectDir}/src/main/jni/opensl_example_interface.i"
    }

}